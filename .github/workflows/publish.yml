name: Publish image

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write        # for keyless cosign OIDC
  attestations: write    # to publish provenance attestations

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # ghcr.io/<owner>/<repo>

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ startsWith(github.ref, 'refs/heads/') }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build & push (multi-arch, SBOM, provenance)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: true       # attaches in-toto provenance
          sbom: true             # attaches SPDX SBOM
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.created }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign images with Cosign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' | while read -r tag; do
            [ -z "$tag" ] && continue
            cosign sign --yes "$tag"
          done

      - name: Attest build provenance
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Use the digest from the build step
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
