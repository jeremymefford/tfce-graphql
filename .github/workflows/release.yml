name: Release

on:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: read

jobs:
  cut-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: npm
          cache-dependency-path: |
            package-lock.json
            docs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install docs dependencies
        working-directory: docs
        run: npm ci

      - name: Determine version bump type
        id: bump
        shell: bash
        env:
          PR_TITLE: "${{ github.event.pull_request.title }}"
        run: |
          if [[ "$PR_TITLE" =~ ^\[(MAJOR|MINOR|PATCH)\][[:space:]].+ ]]; then
            TYPE="${BASH_REMATCH[1]}"
            TYPE=$(echo "$TYPE" | tr '[:upper:]' '[:lower:]')
            echo "type=$TYPE" >> "$GITHUB_OUTPUT"
          else
            echo "::error::Pull request title must match '[MAJOR|MINOR|PATCH] <description>'" >&2
            exit 1
          fi

      - name: Bump package version
        id: version
        run: |
          npm version ${{ steps.bump.outputs.type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Compile TypeScript
        run: npm run compile

      - name: Snapshot docs version
        working-directory: docs
        run: npm run docusaurus docs:version ${{ steps.version.outputs.new_version }}

      - name: Setup commit signing
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.ACTIONS_GPG_KEY }}
          passphrase: ${{ secrets.ACTIONS_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Build docs
        working-directory: docs
        run: npm run build

      - name: Commit release artifacts
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "No changes detected; aborting release."
            exit 1
          fi
          git commit -S -m "release: v${{ steps.version.outputs.new_version }}"
          git push origin HEAD:main

      - name: Create tag
        run: |
          git tag v${{ steps.version.outputs.new_version }}
          git push origin v${{ steps.version.outputs.new_version }}
